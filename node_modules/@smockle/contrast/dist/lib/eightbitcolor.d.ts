import { EightBit } from "./eightbit.js";
import { HexColor } from "./hexcolor.js";
declare const inspect: unique symbol;
export declare class EightBitColor {
    /** The current red value, e.g. EightBit(255). */
    R: EightBit;
    /** The current green value, e.g. EightBit(255). */
    G: EightBit;
    /** The current blue value, e.g. EightBit(255). */
    B: EightBit;
    constructor(R: EightBit | number | null, G: EightBit | number | null, B: EightBit | number | null);
    /** Returns the current red, green and blue values, e.g. { R: 255, G: 255, B: 255 }. */
    valueOf(): {
        R: number;
        G: number;
        B: number;
    };
    /** Returns a formatted representation of the current rgb value, e.g. "rgb(255, 255, 255)". */
    [inspect](): string;
    /** Returns the luminosity. */
    luminosity(): number;
    /** Returns a HexColor with the current value, e.g. Hex("#FFFFFF"). */
    toHexColor(): HexColor;
}
export {};
