import { HexColor } from "./hexcolor.js";
const inspect = Symbol.for("nodejs.util.inspect.custom");
export class Contrast {
    /** The foreground color, e.g. "#FFFFFF". */
    foreground;
    /** The background color, e.g. "#FFFFFF". */
    background;
    /** The luminosity contrast ratio, e.g. 4.5. */
    value;
    constructor(foreground, background) {
        this.foreground = new HexColor(foreground);
        this.background = new HexColor(background);
        this.value = (() => {
            const foreground = this.foreground.toEightBitColor().luminosity();
            const background = this.background.toEightBitColor().luminosity();
            const L1 = Math.max(foreground, background);
            const L2 = Math.min(foreground, background);
            const OFFSET = 0.05;
            return (L1 + OFFSET) / (L2 + OFFSET);
        })();
    }
    /** Returns the luminosity contrast ratio. */
    valueOf() {
        return this.value;
    }
    /** Returns a formatted representation of the luminosity contrast ratio, e.g. "4.5:1". */
    [inspect]() {
        return `${this.value}:1`;
    }
}
